import { Store } from "@/utils/Store";
import { useSession, signOut } from "next-auth/react";
import Head from "next/head";
import Link from "next/link";
import Cookies from "js-cookie";
import "react-toastify/dist/ReactToastify.css";
import { Menu } from "@headlessui/react";
import styled from "styled-components";
import React, { useContext, useEffect, useState } from "react";
type Props = {
  children: string | JSX.Element | JSX.Element[];
  title: string;
};
function Layout({ children, title }: Props) {
  const { status, data: session } = useSession();
  const { state, dispatch } = useContext(Store);
  const { cart } = state;
  const [cartItemsCount, setCarItemsCount] = useState(0);
  useEffect(() => {
    setCarItemsCount(cart.cartItems.reduce((a, c) => a + c.quantity, 0));
  }, [cart.cartItems]);
  const logoutClickHandler = () => {
    console.log("Log out !");
    dispatch({ type: "CART_RESET" });
    signOut({ callbackUrl: "/login" });
  };
  return (
    <Styles>
      <Head>
        <title>{title ? title + " - Amazona" : "Amazona"}</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/amazona.ico" />
      </Head>
      <div className="flex min-h-screen flex-col justify-between">
        <header>
          <nav className="flex h-12 items-center px-4 justify-between shadow-md  ">
            <Link href="/">
              <p className="text-lg font-bold">Amazona</p>
            </Link>
            <div className="flex flex-row gap-4">
              <Link href="/cart">
                <p className="p-2">
                  Cart{" "}
                  {cartItemsCount > 0 && (
                    <span className="bg-red-400 rounded-full ml-1 px-2 py-1 text-xs font-bold text-white">
                      {cartItemsCount}
                    </span>
                  )}
                </p>
              </Link>
              {/* <Link href="/login"> */}
              {status === "loading" ? (
                "Loading"
              ) : session?.user ? (
                <div className="user-status">
                  <div className="dropdown">
                    <Link href="/">
                      <p>{session?.user.name}</p>
                    </Link>
                    <ul className="dropdown-menu">
                      <li>
                        <Link href="/">Profile</Link>
                      </li>
                      <li>
                        {" "}
                        <Link href="/order-history">Order History</Link>
                      </li>
                      <li>
                        {" "}
                        <Link onClick={logoutClickHandler} href="/">
                          Log out
                        </Link>
                      </li>
                    </ul>
                  </div>
                </div>
              ) : (
                <Link href="/login">
                  {" "}
                  <p className="p-2">Login</p>
                </Link>
              )}
              {/* </Link> */}
            </div>
          </nav>
        </header>
        <main className="container m-auto mt-4 px-4">{children}</main>
        <footer className="flex h-10 justify-center items-center shadow-inner">
          footer
        </footer>
      </div>
    </Styles>
  );
}

export default Layout;

const Styles = styled.div`
  .user-status {
    display: flex;
    align-items: center;
  }
  .dropdown {
    position: relative;
    .dropdown-menu {
      position: absolute;
      top: calc(100% + 4px);
      right: 0;
      height: fit-content;
      padding: 12px;
      background-color: white;
      border: 1px solid rgba(0, 0, 0, 0.08);
      border-radius: 8px;
      display: none;
    }
    &:after {
      position: absolute;
      content: "";
      top: 100%;
      left: 0;
      width: 100%;
      height: 4px;
      background: transparent;
    }
    &:hover {
      .dropdown-menu {
        display: flex;
        flex-direction: column;
        gap: 12px;
      }
    }
  }
`;
